version: '3'
services:
  kong-database:
    container_name: 'kong-database'
    image: 'postgres:9.6'
    # ports:
    # - '5432:5432'
    environment:
      - 'POSTGRES_USER=kong'
      - 'POSTGRES_DB=kong'
      - 'POSTGRES_PASSWORD=${DB_PASSWORD}'
    restart: always

  kong-migrations:
    command: 'kong migrations bootstrap'
    container_name: 'kong-migrations'
    image: 'kong:latest'
    environment:
      - 'KONG_DATABASE=postgres'
      - 'KONG_PG_HOST=kong-database'
      - 'KONG_PG_PASSWORD=${DB_PASSWORD}'
    depends_on:
      - kong-database
    links:
      - kong-database
    restart: on-failure

  kong:
    container_name: 'kong'
    image: 'kong:latest'
    environment:
      - 'KONG_DATABASE=postgres'
      - 'KONG_PG_HOST=kong-database'
      - 'KONG_PG_PASSWORD=${DB_PASSWORD}'
      - 'KONG_PROXY_ACCESS_LOG=/dev/stdout'
      - 'KONG_ADMIN_ACCESS_LOG=/dev/stdout'
      - 'KONG_PROXY_ERROR_LOG=/dev/stderr'
      - 'KONG_ADMIN_ERROR_LOG=/dev/stderr'
      - 'KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl'
    ports:
      - '8000:8000'
      - '8443:8443'
      - '8001:8001'
      - '8444:8444'
    depends_on:
      - kong-database
    links:
      - kong-database
    restart: always

  konga:
    container_name: 'konga'
    image: 'pantsel/konga'
    environment:
      - 'NODE_ENV=production'
      - 'DB_URI=postgresql://kong:${DB_PASSWORD}@kong-database:5432/konga'
      - 'KONGA_HOOK_TIMEOUT=120000'
    volumes:
      - './kongadata:/app/kongadata'
    ports:
      - '1337:1337'
    depends_on:
      - kong
      - kong-database
    healthcheck:
      test: ['CMD', 'curl', '-X', 'GET', 'http://kong:8001']
      interval: 30s
      timeout: 1s
      retries: 1
    restart: always
networks:
  default:
    external:
      name: 'kubix_network'
